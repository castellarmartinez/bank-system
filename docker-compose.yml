services:
  postgres:
    image: postgres:17
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 5

  account-service:
    build: 
      context: . 
      dockerfile: account-service/Dockerfile
    container_name: account_service
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      ENV: production
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: ${DB_SSLMODE}
      HOST: account-service
      ACCOUNT_SERVICE_PORT: ${ACCOUNT_SERVICE_PORT}
    ports:
      - "${ACCOUNT_SERVICE_PORT}:${ACCOUNT_SERVICE_PORT}"

  transaction-service:
    build:
      context: .  
      dockerfile: transaction-service/Dockerfile
    container_name: transaction_service
    depends_on:
      postgres:
        condition: service_healthy
      account-service:
        condition: service_started
    env_file:
      - .env
    environment:
      ENV: production
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_SSLMODE: ${DB_SSLMODE}
      HOST: transaction-service
      TRANSACTION_SERVICE_PORT: ${TRANSACTION_SERVICE_PORT}
      ACCOUNT_SERVICE_PORT: ${ACCOUNT_SERVICE_PORT}
    ports:
      - "${TRANSACTION_SERVICE_PORT}:${TRANSACTION_SERVICE_PORT}"

  bff:
    build:
      context: .
      dockerfile: bff/Dockerfile
    container_name: bff_service
    depends_on:
      - account-service
      - transaction-service
    env_file:
      - .env
    environment:
      PORT: ${BFF_SERVICE_PORT}
      API_KEY: ${API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      ACCOUNT_SERVICE_URL: http://account-service:${ACCOUNT_SERVICE_PORT}
      TRANSACTION_SERVICE_URL: http://transaction-service:${TRANSACTION_SERVICE_PORT}
    ports:
      - "${BFF_SERVICE_PORT}:${BFF_SERVICE_PORT}"

volumes:
  postgres_data:
